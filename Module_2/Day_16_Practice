#include <iostream>

using namespace std;

struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

TreeNode* insert(TreeNode* root,int val)  {
    if(root == NULL) {
        return new TreeNode(val);
    }
    if(val < root->val) {
        root->left = insert(root->left, val);
    } else if(val > root->val) {
        root->right = insert(root->right, val);
    }
    return root;
}

int maxDepth(TreeNode* root) {
    if(root == NULL) {
        return 0;
    }
    int leftDepth = maxDepth(root->left);
    int rightDepth = maxDepth(root->right);
    return max(leftDepth, rightDepth) +1;
}

int main() {
    int N;
    cin >>N;
    TreeNode* root =NULL;
    
    for(int i=0;i<N;i++) {
        int num;
        cin>>num;
        root =insert(root,num);
    }
    
    cout << maxDepth(root) << endl;
    
    return 0;
}
